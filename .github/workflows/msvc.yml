name: cmake-msvc
on: [push, pull_request]

jobs:
  job:
    name: ${{ matrix.os }}-hosted-basic
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
            vcpkgPackages: 'sqlite3'

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - uses: lukka/get-cmake@latest
      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash
      - name: Restore artifacts, or run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@main
        id: runvcpkg
        with:
          vcpkgArguments: '${{ matrix.vcpkgPackages }}'
          vcpkgTriplet: '${{ matrix.triplet }}'
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash
      - name: Prints outputs of run-vcpkg task
        run: echo "'${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}' '${{  steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "
      - name: Run CMake+VS16Win64 without triplet
        uses: lukka/run-cmake@main
        id: runcmake
        with:
          cmakeGenerator: 'VS16Win64'  # 'Ninja' fails
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildWithCMakeArgs: '-j 1'
          buildDirectory: '${{ runner.workspace }}/b/'

      - name: Run tests
        run: '${{ runner.workspace }}\b\tests\Debug\test_libsettings.exe'
