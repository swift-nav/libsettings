name: Rust

on:
  push:
    branches:
      - "main"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
  pull_request:

env:
  LIBCLANG_PATH_WIN: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Tools/Llvm/x64/bin"

jobs:
  lint:
    name: Format and lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      # - name: Check bindings are up to date
      #   run: |
      #     cd rust/libsettings-sys
      #     ./bindgen.sh
      #     git diff --exit-code src/bindings.rs

      - uses: actions-rs/cargo@v1
        name: Format Check
        with:
          command: fmt
          args: -- --check

  test:
    name: Tests
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            binary_target: x86_64-unknown-linux-musl
          - os: ubuntu-18.04
            binary_target: x86_64-unknown-linux-gnu
          - os: macos-10.15
            binary_target: x86_64-apple-darwin
          - os: windows-2019
            binary_target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install LLVM and Clang # required for bindgen on Windows
        uses: KyleMayes/install-llvm-action@v1
        if: matrix.os == 'windows-2019'
        with:
          version: "10.0"

      - name: Install rust ${{ matrix.binary_target }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-${{ matrix.binary_target }}
          profile: minimal

      # - uses: bwoodsend/setup-winlibs-action@v1
      #   if: matrix.os == 'windows-2019'
      #   with:
      #     destination: c:/

      # - name: Install MinGW Rust toolchain
      #   if: matrix.os == 'windows-2019'
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable
      #     target: x86_64-pc-windows-gnu
      #     override: true
      #     components: rustfmt, clippy

      # - name: Run tests (Windows)
      #   if: matrix.os == 'windows-2019'
      #   env:
      #     LIBCLANG_PATH: ${{ env.LIBCLANG_PATH_WIN }}
      #     CC: gcc
      #     CXX: g++
      #     CMAKE_GENERATOR: MinGW Makefiles
      #   run: cargo test --target=x86_64-pc-windows-gnu

      # - name: Run tests (Non-Windows)
      # if: matrix.os != 'windows-2019'
      # run: cargo test
      - name: Run tests
        # if: matrix.os != 'windows-2019'
        run: cargo test
